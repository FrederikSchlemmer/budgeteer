import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "org.springframework.boot" version "2.4.1"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

processResources {
    from('src/main/java') {
        exclude '**/*.xlsx'
        filter ReplaceTokens, tokens: [
                "application.version": project.property("version")
        ]
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation project(':budgeteer-importer-api')
    implementation project(':budgeteer-aproda-importer')
    implementation project(':budgeteer-ubw-importer')
    implementation project(':budgeteer-resourceplan-importer')
    implementation project(':budgeteer-report-exporter')

    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: "${poi_version}"

    implementation(
            [group: 'org.apache.wicket', name: 'wicket-spring', version: "${wicket_spring_version}"],
            [group: 'org.apache.wicket', name: 'wicket-extensions', version: "${wicket_spring_version}"],
            [group: 'org.wicketstuff', name: 'wicketstuff-lazymodel', version: "${wicketstuff_lazymodel_version}"],
            [group: 'org.wicketstuff', name: 'wicketstuff-tinymce4', version: "${wicketstuff_tinymce4_version}"],
            [group: 'org.wicketstuff', name: 'wicketstuff-lambda-components', version: "${wicketstuff_tinymce4_version}"],
            [group: 'de.adesso.wicked-charts', name: 'wicked-charts-wicket8', version: "${wickedcharts_version}"]
    )

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"

    implementation group: 'org.reflections', name: 'reflections', version: "${reflections_version}"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: "${commons_lang_version}"

    implementation group: 'org.joda', name: 'joda-money', version: "${joda_money_version}"
    implementation group: 'de.jollyday', name: 'jollyday', version: "${jollyday_version}"

    runtimeOnly(
            [group: 'org.hsqldb', name: 'hsqldb', version: "${hsqldb_version}"],
            [group: 'mysql', name: 'mysql-connector-java', version: "${mysql_version}"],
            [group: 'com.oracle.database.jdbc', name: 'ojdbc10', version: "${oracle_database_version}"],
            [group: 'com.oracle.database.nls', name: 'orai18n', version: "${oracle_database_version}"]
    )

    testImplementation(
            [group: 'org.kubek2k', name: 'springockito', version: "${springockito_version}"],
            [group: 'org.kubek2k', name: 'springockito-annotations', version: "${springockito_version}"],
            [group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: "${spring_dbunit_version}"],
            [group: 'org.dbunit', name: 'dbunit', version: "${dbunit_version}"],
    )

    compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombok_version}"
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombok_version}"
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombok_version}"
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombok_version}"
}
