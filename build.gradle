task wrapper(type: Wrapper) {
    gradleVersion '4.6'
}

// alle Skripte aus ./gradle.d in sortierter Reihenfolge einbinden
file('gradle.d').listFiles().sort().each {
    if (it =~ /.*\.gradle$/) {
        apply from: relativePath(it)
    }
}

allprojects {
    version = getBuildVersion('1.0.9.BETA')
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.6.2"
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: "com.jfrog.artifactory"
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven-publish'

    repositories {
        jcenter()
        mavenLocal()
        maven {
            name "Apache Snapshots"
            url "https://repository.apache.org/content/repositories/snapshots/"
        }
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: junit_version
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5_version
        testCompile group: 'org.springframework', name: 'spring-test', version: spring_version
        testCompile group: 'org.mockito', name: 'mockito-core', version: mockito_version
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5_version
    }

    compileJava {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination "${buildDir}/jacocoHtml"
        }
    }

    test {
        // Enable JUnit 5 (Gradle 4.6+).
        useJUnitPlatform()
    }

    //=============================
//Bintray/Artifactory Configuration

// run gradle with "-Dsnapshot=true" to automatically append "-SNAPSHOT" to the version
    version = project.version + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")
    sourceCompatibility = 1.8

    ext {
        bintrayUser = System.getProperty("bintray.user")
        bintrayKey = System.getProperty("bintray.key")
        buildNumber = System.getProperty("build.number")
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    javadoc.failOnError = false
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    def pomConfig = {
        licenses {
            license {
                name "MIT"
                url "https://opensource.org/licenses/MIT"
                distribution "repo"
            }
        }
        developers {
            developer {
                id "thombergs"
                name "Tom Hombergs"
                email "tom.hombergs@gmail.com"
            }
        }

        scm {
            url "https://github.com/adessoag/budgeteer"
        }
    }

    artifactory {
        contextUrl = 'http://oss.jfrog.org'
        publish {
            repository {
                repoKey = 'oss-snapshot-local'
                username = bintrayUser
                password = bintrayKey
            }
            defaults {
                publications('mavenPublication')
                publishArtifacts = true
                publishPom = true
                properties = [
                        'build.number': buildNumber,
                        'build.name'  : project.name
                ]
            }
        }
        resolve {
            repoKey = 'jcenter'
        }
        clientConfig.info.setBuildNumber(buildNumber)
        clientConfig.info.setBuildName(project.name)
    }

    bintray {
        user = bintrayUser
        key = bintrayKey
        publications = ['mavenPublication']

        pkg {
            repo = 'budgeteer'
            name = 'budgeteer'
            userOrg = 'adesso'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/adessoag/budgeteer'
            version {
                name = project.version
                desc = "build ${buildNumber}"
                released = new Date()
            }
        }

        publish = true
    }

    publishing {
        publications {
            mavenPublication(MavenPublication) {
                from components.java
                artifact sourcesJar {
                    classifier "sources"
                }
                artifact javadocJar {
                    classifier "javadoc"
                }
                groupId 'de.adesso.budgeteer'
                artifactId project.name
                version project.version
                pom.withXml {
                    def root = asNode()
                    root.appendNode('description', 'Budgeteer')
                    root.appendNode('name', project.name)
                    root.appendNode('url', 'https://github.com/adessoag/budgeteer')
                    root.children().last() + pomConfig
                }
            }
        }
    }
}

